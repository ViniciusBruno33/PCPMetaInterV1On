// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCPMetalurgicaInter.Dados;

#nullable disable

namespace PCPMetalurgicaInter.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20250603221800_CanceladaFechadaOP")]
    partial class CanceladaFechadaOP
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Apontamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("Datetime");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("Datetime");

                    b.Property<int>("OperacaoId")
                        .HasColumnType("int");

                    b.Property<int>("OperadorId")
                        .HasColumnType("int");

                    b.Property<int>("OrdemDeProducaoId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperacaoId");

                    b.HasIndex("OperadorId");

                    b.HasIndex("OrdemDeProducaoId");

                    b.ToTable("Apontamentos", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Operacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<int>("TipoDeOperacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDeOperacaoId");

                    b.ToTable("Operacoes", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Operador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Operadores", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.OrdemDeProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("Cancelada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("Datetime");

                    b.Property<ulong>("Fechada")
                        .HasColumnType("bit");

                    b.Property<int>("PCPEmissorId")
                        .HasColumnType("int");

                    b.Property<int>("PecaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PCPEmissorId");

                    b.HasIndex("PecaId");

                    b.ToTable("OPs", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.PCP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("PCPs", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoUniversal")
                        .HasColumnType("varchar(256)");

                    b.Property<string>("DadosImagem")
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("Datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(256)");

                    b.Property<ulong>("Situacao")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pecas", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.PecaOperacao", b =>
                {
                    b.Property<int>("PecaId")
                        .HasColumnType("int");

                    b.Property<int>("OperacaoId")
                        .HasColumnType("int");

                    b.Property<int>("etapa")
                        .HasColumnType("int");

                    b.HasKey("PecaId", "OperacaoId");

                    b.HasIndex("OperacaoId");

                    b.ToTable("PecaOperacoes", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Subproduto", b =>
                {
                    b.Property<int>("PecaId")
                        .HasColumnType("int");

                    b.Property<int>("PecaSubId")
                        .HasColumnType("int");

                    b.Property<float>("Quantidade")
                        .HasColumnType("float");

                    b.HasKey("PecaId", "PecaSubId");

                    b.HasIndex("PecaSubId");

                    b.ToTable("Subprodutos", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.TipoDeOperacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("TipoOperacoes", (string)null);
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Apontamento", b =>
                {
                    b.HasOne("PCPMetalurgicaInter.Models.Operacao", "Operacao")
                        .WithMany("Apontamentos")
                        .HasForeignKey("OperacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PCPMetalurgicaInter.Models.Operador", "Operador")
                        .WithMany("Apontamentos")
                        .HasForeignKey("OperadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCPMetalurgicaInter.Models.OrdemDeProducao", "OrdemDeProducao")
                        .WithMany("Apontamentos")
                        .HasForeignKey("OrdemDeProducaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Operacao");

                    b.Navigation("Operador");

                    b.Navigation("OrdemDeProducao");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Operacao", b =>
                {
                    b.HasOne("PCPMetalurgicaInter.Models.TipoDeOperacao", "TipoDeOperacao")
                        .WithMany("Operacoes")
                        .HasForeignKey("TipoDeOperacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TipoDeOperacao");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Operador", b =>
                {
                    b.HasOne("PCPMetalurgicaInter.Models.Funcionario", "Funcionario")
                        .WithOne("Operador")
                        .HasForeignKey("PCPMetalurgicaInter.Models.Operador", "FuncionarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.OrdemDeProducao", b =>
                {
                    b.HasOne("PCPMetalurgicaInter.Models.PCP", "PCPEmissor")
                        .WithMany("Ops")
                        .HasForeignKey("PCPEmissorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PCPMetalurgicaInter.Models.Peca", "Peca")
                        .WithMany("Ops")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PCPEmissor");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.PCP", b =>
                {
                    b.HasOne("PCPMetalurgicaInter.Models.Funcionario", "Funcionario")
                        .WithOne("PCP")
                        .HasForeignKey("PCPMetalurgicaInter.Models.PCP", "FuncionarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.PecaOperacao", b =>
                {
                    b.HasOne("PCPMetalurgicaInter.Models.Operacao", "Operacao")
                        .WithMany("PecaOperacaoes")
                        .HasForeignKey("OperacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PCPMetalurgicaInter.Models.Peca", "Peca")
                        .WithMany("PecaOperacoes")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operacao");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Subproduto", b =>
                {
                    b.HasOne("PCPMetalurgicaInter.Models.Peca", "Peca")
                        .WithMany("Subprodutos")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PCPMetalurgicaInter.Models.Peca", "PecaSub")
                        .WithMany()
                        .HasForeignKey("PecaSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peca");

                    b.Navigation("PecaSub");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Funcionario", b =>
                {
                    b.Navigation("Operador");

                    b.Navigation("PCP");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Operacao", b =>
                {
                    b.Navigation("Apontamentos");

                    b.Navigation("PecaOperacaoes");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Operador", b =>
                {
                    b.Navigation("Apontamentos");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.OrdemDeProducao", b =>
                {
                    b.Navigation("Apontamentos");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.PCP", b =>
                {
                    b.Navigation("Ops");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.Peca", b =>
                {
                    b.Navigation("Ops");

                    b.Navigation("PecaOperacoes");

                    b.Navigation("Subprodutos");
                });

            modelBuilder.Entity("PCPMetalurgicaInter.Models.TipoDeOperacao", b =>
                {
                    b.Navigation("Operacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
